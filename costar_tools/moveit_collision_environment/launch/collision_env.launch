<launch>
  <!-- main collision environment parameter -->
  <arg name="mesh_source"         default="$(env HOME)/data/mesh/collision_mesh" 
    doc="Location of the folder that contains the mesh object files" />
  <arg name="file_extension"      default="stl" 
    doc="The extension that used by all mesh files. Supports assimp importable extension, such as: stl, obj, dae, blend" />

  <arg name="charToFind"          default="/" 
    doc="Signature characters that separates between the information inside the TF name, such as objectTFsignature, name of object, and object ID"/>

  <arg name="objectTFsignature"    default="objects"
    doc="Signature characters that must presents inside the TF to be qualified as collision object. This signature must match the start of the TF name" />

  <arg name="objectNameIdx"       default="2" 
    doc="The position of the object name after charToFind separation"/>
  <arg name="tableTF"         default="ar_marker_2" 
    doc="The TF name for the table" />
  <arg name="defineParent"        default="true" 
    doc="Boolean variable to set whether we use predefined parent name for collision object TF header or not" />
  <arg name="parentFrameName"     default="base_link"
    doc="Predefined collision object TF header" />
  <arg name="renewTable"          default="false" />

  <arg name="useTableWall"           default="true" doc="Add a wall on back,left, and right edge of the table."/>
  <arg name="useBaseLinkWall"        default="true" doc="Add a wall on back,left, and right edge of the baseLink."/>

  <arg name="baseLinkName"           default="base_link" doc="The name of base link used for generating robot ground"/>
  <arg name="useBaseLinkGround"      default="true" doc="Add robot ground"/>
  <arg name="tableSize"              default="1.0" doc="Table and wall size in meters" />
  <arg name="baseLinkWallDistance"   default="0.75" doc="Baselink to  wall distance in meters" />


  <arg name="useDetectedObjectMsgs"   default="true" doc="Use the published costar_objrec_msgs DetectedObjectList msgs to get the tf name and type of the object" />
  <arg name="detectedObjectTopic"   default="/SPServer/detected_object_list" doc="The name of detected object msgs topic. Oonly used if useDetectedObjectMsgs == true" />

  <!-- Enable for debugging purpose -->
  <arg name="debug"               default="false" />

  <node pkg="moveit_collision_environment" type="moveit_collision_environment" name="planningSceneGenerator">  
  <!-- moveit_collision_environment arg pass -->
    <param name="mesh_source"     type="str"  value="$(arg mesh_source   )" />
    <param name="file_extension"  type="str"  value="$(arg file_extension)" />

    <param name="objTFsignature"  type="str"  value="$(arg objectTFsignature    )" />
    <param name="charToFind"      type="str"  value="$(arg charToFind    )" />
    <param name="objectNameIdx"   type="int"  value="$(arg objectNameIdx )" />

    <param name="tableTFname"     type="str"  value="$(arg tableTF   )" />
    <param name="renewTable"      type="bool" value="$(arg renewTable    )" />


    <param name="useTableWall"    type="bool" value="$(arg useTableWall )" />
    <param name="useBaseLinkGround"    type="bool" value="$(arg useBaseLinkGround  )" />
    <param name="baseLinkName"    type="str" value="$(arg baseLinkName )" />

    <param name="tableSize"   type="double"  value="$(arg tableSize )" />
    <param name="baseLinkWallDistance"   type="double"  value="$(arg baseLinkWallDistance )" />

    <param name="defineParent"    type="bool" value="$(arg defineParent  )" />
    <param name="parentFrameName" type="str"  value="$(arg parentFrameName)" />

    <param name="useDetectedObjectMsgs"    type="bool" value="$(arg useDetectedObjectMsgs  )" />
    <param name="detectedObjectTopic" type="str"  value="$(arg detectedObjectTopic)" />
 
    <param name="debug"           type="bool" value="$(arg debug)" />
  </node>

</launch>
